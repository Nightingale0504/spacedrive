// File generated by SD Sync Generator. DO NOT EDIT

use super::prisma::*;
use prisma_client_rust::scalar_types::*;
impl album::SetParam {
	pub fn deserialize(field: &str, val: ::rmpv::Value) -> Option<Self> {
		Some(match field {
			album::id::NAME => album::id::set(::rmpv::ext::from_value(val).unwrap()),
			album::pub_id::NAME => album::pub_id::set(::rmpv::ext::from_value(val).unwrap()),
			album::name::NAME => album::name::set(::rmpv::ext::from_value(val).unwrap()),
			album::is_hidden::NAME => album::is_hidden::set(::rmpv::ext::from_value(val).unwrap()),
			album::date_created::NAME => {
				album::date_created::set(::rmpv::ext::from_value(val).unwrap())
			}
			album::date_modified::NAME => {
				album::date_modified::set(::rmpv::ext::from_value(val).unwrap())
			}
			_ => return None,
		})
	}
}
impl album::UniqueWhereParam {
	pub fn deserialize(field: &str, val: ::rmpv::Value) -> Option<Self> {
		Some(match field {
			album::id::NAME => album::id::equals(::rmpv::ext::from_value(val).unwrap()),
			album::pub_id::NAME => album::pub_id::equals(::rmpv::ext::from_value(val).unwrap()),
			_ => return None,
		})
	}
}
