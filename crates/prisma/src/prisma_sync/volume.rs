// File generated by SD Sync Generator. DO NOT EDIT

use super::prisma::*;
use prisma_client_rust::scalar_types::*;
impl volume::SetParam {
	pub fn deserialize(field: &str, val: ::rmpv::Value) -> Option<Self> {
		Some(match field {
			volume::id::NAME => volume::id::set(::rmpv::ext::from_value(val).unwrap()),
			volume::name::NAME => volume::name::set(::rmpv::ext::from_value(val).unwrap()),
			volume::mount_point::NAME => {
				volume::mount_point::set(::rmpv::ext::from_value(val).unwrap())
			}
			volume::total_bytes_capacity::NAME => {
				volume::total_bytes_capacity::set(::rmpv::ext::from_value(val).unwrap())
			}
			volume::total_bytes_available::NAME => {
				volume::total_bytes_available::set(::rmpv::ext::from_value(val).unwrap())
			}
			volume::disk_type::NAME => {
				volume::disk_type::set(::rmpv::ext::from_value(val).unwrap())
			}
			volume::filesystem::NAME => {
				volume::filesystem::set(::rmpv::ext::from_value(val).unwrap())
			}
			volume::is_system::NAME => {
				volume::is_system::set(::rmpv::ext::from_value(val).unwrap())
			}
			volume::date_modified::NAME => {
				volume::date_modified::set(::rmpv::ext::from_value(val).unwrap())
			}
			_ => return None,
		})
	}
}
impl volume::UniqueWhereParam {
	pub fn deserialize(field: &str, val: ::rmpv::Value) -> Option<Self> {
		Some(match field {
			volume::id::NAME => volume::id::equals(::rmpv::ext::from_value(val).unwrap()),
			_ => return None,
		})
	}
}
