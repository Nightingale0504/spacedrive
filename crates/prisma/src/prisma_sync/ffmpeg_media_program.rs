// File generated by SD Sync Generator. DO NOT EDIT

use super::prisma::*;
use prisma_client_rust::scalar_types::*;
impl ffmpeg_media_program::SetParam {
	pub fn deserialize(field: &str, val: ::rmpv::Value) -> Option<Self> {
		Some(match field {
			ffmpeg_media_program::program_id::NAME => {
				ffmpeg_media_program::program_id::set(::rmpv::ext::from_value(val).unwrap())
			}
			ffmpeg_media_program::name::NAME => {
				ffmpeg_media_program::name::set(::rmpv::ext::from_value(val).unwrap())
			}
			ffmpeg_media_program::metadata::NAME => {
				ffmpeg_media_program::metadata::set(::rmpv::ext::from_value(val).unwrap())
			}
			ffmpeg_media_program::ffmpeg_data::NAME => {
				let val: std::collections::HashMap<String, rmpv::Value> =
					::rmpv::ext::from_value(val).unwrap();
				let val = val.into_iter().next().unwrap();
				ffmpeg_media_program::ffmpeg_data::connect(
					ffmpeg_data::UniqueWhereParam::deserialize(&val.0, val.1).unwrap(),
				)
			}
			_ => return None,
		})
	}
}
