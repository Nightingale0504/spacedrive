// File generated by Prisma Client Rust. DO NOT EDIT

use super::super::{_prisma::*, *};
use super::{SetParam, UncheckedSetParam, UniqueWhereParam, WhereParam, WithParam};
pub const NAME: &str = "sync_preview_media";
pub type Type = Option<Boolean>;
pub type RecursiveSafeType = Type;
pub struct Equals(pub Option<Boolean>);
pub fn equals<T: From<Equals>>(value: Option<Boolean>) -> T {
	Equals(value).into()
}
impl From<Equals> for WhereParam {
	fn from(Equals(v): Equals) -> Self {
		WhereParam::SyncPreviewMedia(_prisma::read_filters::BooleanNullableFilter::Equals(v))
	}
}
::prisma_client_rust::scalar_where_param_fns!(
	_prisma::read_filters::BooleanNullableFilter,
	SyncPreviewMedia,
	{
		fn not(_: Option<Boolean>) -> Not;
	}
);
pub struct Order(SortOrder);
pub fn order<T: From<Order>>(v: SortOrder) -> T {
	Order(v).into()
}
impl From<Order> for super::OrderByWithRelationParam {
	fn from(Order(v): Order) -> Self {
		Self::SyncPreviewMedia(v)
	}
}
pub struct Set(pub Option<Boolean>);
impl From<Set> for SetParam {
	fn from(Set(v): Set) -> Self {
		Self::SyncPreviewMedia(_prisma::write_params::BooleanNullableParam::Set(v))
	}
}
pub fn set<T: From<Set>>(value: Option<Boolean>) -> T {
	Set(value).into()
}
pub struct UpdateOperation(pub _prisma::write_params::BooleanNullableParam);
impl From<UpdateOperation> for SetParam {
	fn from(UpdateOperation(v): UpdateOperation) -> Self {
		Self::SyncPreviewMedia(v)
	}
}
impl From<Set> for UncheckedSetParam {
	fn from(Set(v): Set) -> Self {
		Self::SyncPreviewMedia(_prisma::write_params::BooleanNullableParam::Set(v))
	}
}
impl From<UpdateOperation> for UncheckedSetParam {
	fn from(UpdateOperation(v): UpdateOperation) -> Self {
		Self::SyncPreviewMedia(v)
	}
}
pub struct Select;
impl Into<super::SelectParam> for Select {
	fn into(self) -> super::SelectParam {
		super::SelectParam::SyncPreviewMedia(self)
	}
}
impl Into<::prisma_client_rust::Selection> for Select {
	fn into(self) -> ::prisma_client_rust::Selection {
		::prisma_client_rust::sel(NAME)
	}
}
pub struct Include;
impl Into<super::IncludeParam> for Include {
	fn into(self) -> super::IncludeParam {
		super::IncludeParam::SyncPreviewMedia(self)
	}
}
impl Into<::prisma_client_rust::Selection> for Include {
	fn into(self) -> ::prisma_client_rust::Selection {
		::prisma_client_rust::sel(NAME)
	}
}
